function contentEditable($log,$sce,$compile,$window){function _link(scope,elem,attrs,ngModel){if(!ngModel)return void $log.warn("Error: ngModel is required in elem: ",elem);var noEscape=!0;elem.addClass("content-editable"),scope.ngModel||ngModel.$setViewValue(elem.html()),ngModel.$render=function(){elem.html(ngModel.$modelValue)},elem.bind("click",function(e){return e.preventDefault(),elem.attr("contenteditable","true"),elem[0].focus()}),elem.bind("focus",function(e){if(noEscape=!0,attrs.focusSelect){var range=$window.document.createRange();range.selectNodeContents(elem[0]),$window.getSelection().addRange(range)}attrs.renderHtml&&(elem[0].textContent=elem.html())}),elem.bind("blur",function(){var html;return elem.attr("contenteditable","false"),attrs.renderHtml&&noEscape?(console.log(noEscape),html=elem[0].textContent.replace(/\u00a0/g," "),elem.html(html)):html=elem.html().replace(/<div>/g,"").replace(/&nbsp;/g," ").replace(/<\/div>/g,""),html!=ngModel.$modelValue&&(ngModel.$setViewValue(html),scope.editCallback&&angular.isFunction(scope.editCallback))?scope.$apply(scope.editCallback(html,elem)):void 0}),elem.bind("keydown",function(e){return 9==e.which?elem[0].blur():27==e.which?(ngModel.$rollbackViewValue(),noEscape=!1,elem[0].blur()):13==e.which&&attrs.singleLine?elem[0].blur():void 0})}var directive={restrict:"A",require:"?ngModel",scope:{editCallback:"=",ngModel:"="},link:_link};return directive}angular.module("content-editable",[]).directive("contentEditable",contentEditable),contentEditable.$inject=["$log","$sce","$compile","$window"];